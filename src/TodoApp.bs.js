// Generated by BUCKLESCRIPT VERSION 4.0.3, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var TodoList$ReactTemplate = require("./TodoList.bs.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

var component = ReasonReact.reducerComponent("TodoApp");

function make() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var todoLists = function (lsts) {
                return $$Array.mapi((function (_, lst) {
                              return ReasonReact.element(lst[/* id */0], undefined, TodoList$ReactTemplate.make(lst, (function (src_list_id, src_item_id, dest_list_id) {
                                                return Curry._1(self[/* send */3], /* DragItem */Block.__(2, [
                                                              src_list_id,
                                                              src_item_id,
                                                              dest_list_id
                                                            ]));
                                              }), /* array */[]));
                            }), lsts);
              };
              return React.createElement("div", {
                          className: "container"
                        }, React.createElement("h1", {
                              className: "title"
                            }, "Todo Lists"), React.createElement("div", {
                              className: "level"
                            }, todoLists(self[/* state */1][/* lists */1]), React.createElement("div", {
                                  className: "level-item"
                                }, React.createElement("div", {
                                      className: "field"
                                    }, React.createElement("div", {
                                          className: "control"
                                        }, React.createElement("input", {
                                              className: "input is-primary",
                                              value: self[/* state */1][/* new_list_name */0],
                                              onChange: (function ($$event) {
                                                  return Curry._1(self[/* send */3], /* ChangeNewListName */Block.__(1, [$$event.target.value]));
                                                })
                                            }), React.createElement("a", {
                                              className: "button",
                                              onClick: (function () {
                                                  return Curry._1(self[/* send */3], /* AddList */Block.__(0, [self[/* state */1][/* new_list_name */0]]));
                                                })
                                            }, "Add list"))))));
            }),
          /* initialState */(function () {
              return /* record */[
                      /* new_list_name */"",
                      /* lists */TodoList$ReactTemplate.demo_lists(2)
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              switch (action.tag | 0) {
                case 0 : 
                    return /* Update */Block.__(0, [/* record */[
                                /* new_list_name */"",
                                /* lists */$$Array.append(state[/* lists */1], /* array */[TodoList$ReactTemplate.empty_list(action[0])])
                              ]]);
                case 1 : 
                    return /* Update */Block.__(0, [/* record */[
                                /* new_list_name */action[0],
                                /* lists */state[/* lists */1]
                              ]]);
                case 2 : 
                    var dest_list_id = action[2];
                    var src_item_id = action[1];
                    var src_list_id = action[0];
                    console.log(/* tuple */[
                          "drag item, src_list_id: ",
                          src_list_id,
                          "src_item_id",
                          src_item_id,
                          "dest_list_id",
                          dest_list_id
                        ]);
                    var new_lists;
                    try {
                      new_lists = TodoList$ReactTemplate.move_item(state[/* lists */1], src_list_id, src_item_id, dest_list_id);
                    }
                    catch (exn){
                      if (exn === Caml_builtin_exceptions.not_found) {
                        new_lists = state[/* lists */1];
                      } else {
                        throw exn;
                      }
                    }
                    return /* Update */Block.__(0, [/* record */[
                                /* new_list_name */state[/* new_list_name */0],
                                /* lists */new_lists
                              ]]);
                
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
